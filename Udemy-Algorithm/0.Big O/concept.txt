


1. 빅오 표기법의 필요성 
  - 같은 문제라도 여러 해결법이 존재할텐데 빅오 표기법을 사용한다면, 여러 해결방법들을 비교하고 성능을 평가할 수 있다.
 - 코드의 성능을 정확한 언어로 설명할 수 있어야 하는데 이럴 때 도움을 준다.
 - 상충관계를 갖는 다른 접근법들을 논할 때 유용하다. 
 - 면접에 자주나오기 때문이라도 중요하다.


 우리가 코드를 쓸 때 '더 나은 코드'라는 의미는 크게 세 가지 기준으로 나눌 수 있다. 

1. 속도
2. 메모리 사용량 
3. 가독성 

속도를 기준으로 볼 때,
 - 내장되어 있는 타이밍 펑션을 사용하면 브라우저가 이 문서를 만든 시간, 이 창이 열린 시간을 말해준다. 
 - let ti = performance.now();
 이 함수를 적용하고자하는 함수 전후로 작성하고, 빼주면 시간이 지남을 시각적으로 확인할 수 있다. 이 차이를 이용하여, 어느 로직으로 작성된 함수의 속도가 더 빠른지 알아볼 수 있다. 	

 하지만 이 경우, 기기마다, 웹페이지의 환경 등 여러 변수로 인해서 속도 측정에 불확실한 부분이 많다. 

 이렇게 시간을 측정하지 않고 코드들을 비교할 때 빅오 표기법이 유용하다. 

 어떤 컴퓨터를 사용하든, 연산의 개수는 같다. 그렇기 때문에 우리는 갯수로 성능을 판단해볼 수 있다. 

 +/-/=/* 들을 만날 때마다 연산 횟수가 1씩 늘어난다. 이 총합을 세는 것을 속도 평가의 기준으로 삼을 수 있다.





