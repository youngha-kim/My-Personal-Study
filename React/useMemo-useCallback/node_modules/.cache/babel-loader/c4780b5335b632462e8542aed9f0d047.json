{"ast":null,"code":"var _jsxFileName = \"/Users/youngha/Personal Study/React/useMemo-useCallback/src/UseMemoEx4.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter(user => user.active).length;\n}\n\nfunction memoEx4() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    email: \"\"\n  });\n  const {\n    username,\n    email\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\",\n    active: false\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers(users.concat(user));\n    setInputs({\n      username: \"\",\n      email: \"\"\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const onToggle = id => {\n    setUsers(users.map(user => user.id === id ? { ...user,\n      active: !user.active,\n      username: !user.username\n    } : user));\n  };\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(memoEx4, \"iXAwqjofxAz/DKaYWxxKbaCU1I8=\");\n\nexport default memoEx4;","map":{"version":3,"names":["React","useRef","useState","useMemo","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","memoEx4","inputs","setInputs","username","email","onChange","e","name","value","target","setUsers","id","nextId","onCreate","current","concat","onRemove","onToggle","map","count"],"sources":["/Users/youngha/Personal Study/React/useMemo-useCallback/src/UseMemoEx4.js"],"sourcesContent":["import React, { useRef, useState, useMemo } from \"react\";\nimport UserList from \"./UserList\";\nimport CreateUser from \"./CreateUser\";\n\nfunction countActiveUsers(users) {\n  console.log(\"활성 사용자 수를 세는중...\");\n  return users.filter((user) => user.active).length;\n}\n\n\nfunction memoEx4() {\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    email: \"\",\n  });\n\n  const { username, email } = inputs;\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      username: \"velopert\",\n      email: \"public.velopert@gmail.com\",\n      active: true,\n    },\n    {\n      id: 2,\n      username: \"tester\",\n      email: \"tester@example.com\",\n      active: false,\n    },\n    {\n      id: 3,\n      username: \"liz\",\n      email: \"liz@example.com\",\n      active: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n  \n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email,\n    };\n    setUsers(users.concat(user));\n\n    setInputs({\n      username: \"\",\n      email: \"\",\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = (id) => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users.filter((user) => user.id !== id));\n  };\n  const onToggle = (id) => {\n    setUsers(\n      users.map((user) =>\n        user.id === id ? { ...user, active: !user.active, username : !user.username } : user\n      )\n    );\n  };\n\n  const count = useMemo(() => countActiveUsers(users), [users])\n\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n\nexport default memoEx4;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}