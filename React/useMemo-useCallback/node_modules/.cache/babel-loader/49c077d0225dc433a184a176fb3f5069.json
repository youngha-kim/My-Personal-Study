{"ast":null,"code":"var _jsxFileName = \"/Users/youngha/Udemy/React/useMemo-useCallback/src/UseCallbackEx1.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CallbackEX1 = () => {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [toggle, setToggle] = useState(true); //원본함수 \n  //   const someFunction = () => {\n  //     console.log(`someFunc: number: ${number}`);\n  //     return ; \n  //   };\n\n  const someFunction = useCallback(() => {\n    console.log(`someFunc: number: ${number}`);\n    return;\n  }, [number]);\n  useEffect(() => {\n    console.log('somefunction이 변경되었습니다.');\n  }, [someFunction]); //useEffect를 사용하면, someFunction은 함수 객체이기 때문에, 재선언될 때마다 다른 주소를 참조하기 때문에,\n  //someFunction이 갱신되었다고 인식하여 매번, console.log 출력한다. \n  // 정확히 말하자면 someFunction 의 주솟값을 비교하게 되는데, 주소값이 매번달라진다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: e => setNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToggle(!toggle),\n      children: toggle.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: someFunction,\n      children: \" Call someFunction \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CallbackEX1, \"zrMdOcvtyRREDQDVnnsfgczjpB8=\");\n\n_c = CallbackEX1;\nexport default CallbackEX1;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallbackEX1\");","map":{"version":3,"names":["useEffect","useState","useCallback","React","CallbackEX1","number","setNumber","toggle","setToggle","someFunction","console","log","e","target","value","toString"],"sources":["/Users/youngha/Udemy/React/useMemo-useCallback/src/UseCallbackEx1.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\"\n\nimport React from 'react';\n\nconst CallbackEX1 = () => {\n  const [number, setNumber] = useState(0);\n  const [toggle, setToggle] = useState(true);\n//원본함수 \n//   const someFunction = () => {\n//     console.log(`someFunc: number: ${number}`);\n//     return ; \n//   };\n\nconst someFunction = useCallback(() => {\n    console.log(`someFunc: number: ${number}`);\n    return ; \n},[number]);\n\n\n  useEffect(()=>{\n    console.log('somefunction이 변경되었습니다.')\n  }, [someFunction]);\n  //useEffect를 사용하면, someFunction은 함수 객체이기 때문에, 재선언될 때마다 다른 주소를 참조하기 때문에,\n  //someFunction이 갱신되었다고 인식하여 매번, console.log 출력한다. \n  // 정확히 말하자면 someFunction 의 주솟값을 비교하게 되는데, 주소값이 매번달라진다.\n\n  return (\n    <div>\n        <input\n        type = 'number'\n        value = {number}\n        onChange={(e) => setNumber(e.target.value)}\n        />\n        <button onClick={() => setToggle(!toggle)}>{toggle.toString()}</button>\n        <br/>\n        <button onClick = {someFunction}> Call someFunction </button>\n    </div>\n  );\n\n\n}\n\nexport default CallbackEX1;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC,CAFwB,CAG1B;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,YAAY,GAAGP,WAAW,CAAC,MAAM;IACnCQ,OAAO,CAACC,GAAR,CAAa,qBAAoBN,MAAO,EAAxC;IACA;EACH,CAH+B,EAG9B,CAACA,MAAD,CAH8B,CAAhC;EAMEL,SAAS,CAAC,MAAI;IACZU,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACD,CAFQ,EAEN,CAACF,YAAD,CAFM,CAAT,CAfwB,CAkBxB;EACA;EACA;;EAEA,oBACE;IAAA,wBACI;MACA,IAAI,EAAG,QADP;MAEA,KAAK,EAAIJ,MAFT;MAGA,QAAQ,EAAGO,CAAD,IAAON,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;IAH1B;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAQ,OAAO,EAAE,MAAMN,SAAS,CAAC,CAACD,MAAF,CAAhC;MAAA,UAA4CA,MAAM,CAACQ,QAAP;IAA5C;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAQ,OAAO,EAAIN,YAAnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CApCD;;GAAML,W;;KAAAA,W;AAsCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}